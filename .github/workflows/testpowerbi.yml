name: PowerBi CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  PowerBi-CI:
    name: PowerBi CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Upload PBIX File
        id: upload_pbix
        uses: actions/upload-artifact@v3
        with:
          name: pbixfile
          path: './Power-BI/test_workbook.pbix' # Ensure the path is correct

  PowerBi-Release:
    name: PowerBi Release
    runs-on: ubuntu-latest
    needs: PowerBi-CI
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Step 3: Download PBIX File
      - name: Download PBIX File
        uses: actions/download-artifact@v3
        with:
          name: pbixfile

      - name: Power BI Authentication
        id: auth
        run: |
          response=$(curl -X POST -H "Content-Type: application/x-www-form-urlencoded" \
            -d "grant_type=client_credentials&client_id=${{ secrets.Client_ID }}&client_secret=${{ secrets.Client_SECRET }}&scope=https://analysis.windows.net/powerbi/api/.default&tenant=${{ secrets.TENANT_ID }}" \
            https://login.microsoftonline.com/${{ secrets.AZURE_TENANT_ID }}/oauth2/v2.0/token)
          echo "::set-output name=access_token::$(echo $response | jq -r '.access_token')"

      # Step 3: Upload the PBIX file to the Power BI Workspace
      - name: Deploy PBIX to Power BI Workspace
        run: |
          # Set variables
          ACCESS_TOKEN=${{ steps.auth.outputs.access_token }}
          WORKSPACE_ID=${{ secrets.PBI_WORKSPACE_ID }}
          
          # Path to your .pbix file in the repository
          PBIX_FILE_PATH="./Power-BI/test_workbook.pbix"

          # Import the PBIX file to Power BI Workspace
          curl -X POST \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -F "file=@$PBIX_FILE_PATH" \
            "https://api.powerbi.com/v1.0/myorg/groups/${{ secrets.WORKSPACE_ID }}/imports?datasetDisplayName=MyReport&nameConflict=CreateOrOverwrite"

      # Log Success Message
      - name: Deployment Complete
        run: echo "Power BI deployment completed successfully!"
